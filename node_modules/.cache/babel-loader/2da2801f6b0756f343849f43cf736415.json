{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\pr0\\\\blockchain-developer-bootcamp\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\pr0\\\\blockchain-developer-bootcamp\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"C:\\\\pr0\\\\blockchain-developer-bootcamp\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\pr0\\\\blockchain-developer-bootcamp\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _inherits from \"C:\\\\pr0\\\\blockchain-developer-bootcamp\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:\\\\pr0\\\\blockchain-developer-bootcamp\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"C:\\\\pr0\\\\blockchain-developer-bootcamp\\\\src\\\\components\\\\Balance.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { loadBalances } from '../store/interactions';\n\nvar Balance = /*#__PURE__*/function (_Component) {\n  _inherits(Balance, _Component);\n\n  var _super = _createSuper(Balance);\n\n  function Balance() {\n    _classCallCheck(this, Balance);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(Balance, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      this.loadBlockchainData();\n    }\n  }, {\n    key: \"loadBlockchainData\",\n    value: function () {\n      var _loadBlockchainData = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(props) {\n        var dispatch, web3, exchange, token, account;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                dispatch = props.dispatch, web3 = props.web3, exchange = props.exchange, token = props.token, account = props.account;\n                _context.next = 3;\n                return loadBalances(dispatch, web3, exchange, token, account);\n\n              case 3:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function loadBlockchainData(_x) {\n        return _loadBlockchainData.apply(this, arguments);\n      }\n\n      return loadBlockchainData;\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"card bg-dark text-white\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"card-header\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 17\n        }\n      }, \"Balance\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"card-body\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 17\n        }\n      }));\n    }\n  }]);\n\n  return Balance;\n}(Component);\n\nfunction mapStateToProps(state) {\n  return {// Fill me in\n  };\n}\n\nexport default connect(mapStateToProps)(Balance);","map":{"version":3,"names":["React","Component","connect","loadBalances","Balance","loadBlockchainData","props","dispatch","web3","exchange","token","account","mapStateToProps","state"],"sources":["C:/pr0/blockchain-developer-bootcamp/src/components/Balance.js"],"sourcesContent":["import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { loadBalances } from '../store/interactions'\r\n\r\nclass Balance extends Component {\r\n    componentWillMount() {   \r\n          this.loadBlockchainData()\r\n        }\r\n      \r\n    async loadBlockchainData(props) {\r\n        const { dispatch, web3, exchange, token, account } = props\r\n        await loadBalances(dispatch, web3, exchange, token, account) // Ether balance comes from web3\r\n    }\r\n      \r\n    render() {\r\n        return (\r\n            <div className=\"card bg-dark text-white\">\r\n                <div className=\"card-header\">\r\n                    Balance\r\n                </div>\r\n                <div className=\"card-body\">\r\n        \r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n      // Fill me in\r\n     }\r\n  }    \r\n    \r\nexport default connect(mapStateToProps)(Balance)"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,YAAT,QAA6B,uBAA7B;;IAEMC,O;;;;;;;;;;;;;WACF,8BAAqB;MACf,KAAKC,kBAAL;IACD;;;;yFAEL,iBAAyBC,KAAzB;QAAA;QAAA;UAAA;YAAA;cAAA;gBACYC,QADZ,GACyDD,KADzD,CACYC,QADZ,EACsBC,IADtB,GACyDF,KADzD,CACsBE,IADtB,EAC4BC,QAD5B,GACyDH,KADzD,CAC4BG,QAD5B,EACsCC,KADtC,GACyDJ,KADzD,CACsCI,KADtC,EAC6CC,OAD7C,GACyDL,KADzD,CAC6CK,OAD7C;gBAAA;gBAAA,OAEUR,YAAY,CAACI,QAAD,EAAWC,IAAX,EAAiBC,QAAjB,EAA2BC,KAA3B,EAAkCC,OAAlC,CAFtB;;cAAA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA,C;;;;;;;;;;WAKA,kBAAS;MACL,oBACI;QAAK,SAAS,EAAC,yBAAf;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,gBACI;QAAK,SAAS,EAAC,aAAf;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,aADJ,eAII;QAAK,SAAS,EAAC,WAAf;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,EAJJ,CADJ;IAUH;;;;EArBiBV,S;;AAwBtB,SAASW,eAAT,CAAyBC,KAAzB,EAAgC;EAC5B,OAAO,CACL;EADK,CAAP;AAGD;;AAEH,eAAeX,OAAO,CAACU,eAAD,CAAP,CAAyBR,OAAzB,CAAf"},"metadata":{},"sourceType":"module"}