{"ast":null,"code":"import { createStore, applyMiddleware, compose } from 'redux';\nimport { createLogger } from 'redux-logger';\nimport rootReducer from './reducers';\nvar loggerMiddleware = createLogger();\nvar middleware = []; // For Redux Tools\n\nvar composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nexport default function configureStore(preloadedState) {\n  return createStore(rootReducer, preloadedState, composeEnhancers(applyMiddleware.apply(void 0, middleware.concat([loggerMiddleware]))));\n}","map":{"version":3,"names":["createStore","applyMiddleware","compose","createLogger","rootReducer","loggerMiddleware","middleware","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","configureStore","preloadedState"],"sources":["C:/pr0/blockchain-developer-bootcamp/src/store/configureStore.js"],"sourcesContent":["\r\nimport { createStore, applyMiddleware, compose } from 'redux'\r\nimport { createLogger } from 'redux-logger'\r\nimport rootReducer from './reducers'\r\n\r\nconst loggerMiddleware = createLogger()\r\nconst middleware = []\r\n\r\n// For Redux Tools\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\r\n\r\nexport default function configureStore(preloadedState) {\r\n    return createStore(\r\n        rootReducer,\r\n        preloadedState,\r\n        composeEnhancers(applyMiddleware(...middleware, loggerMiddleware))\r\n    )\r\n}"],"mappings":"AACA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,OAAvC,QAAsD,OAAtD;AACA,SAASC,YAAT,QAA6B,cAA7B;AACA,OAAOC,WAAP,MAAwB,YAAxB;AAEA,IAAMC,gBAAgB,GAAGF,YAAY,EAArC;AACA,IAAMG,UAAU,GAAG,EAAnB,C,CAEA;;AACA,IAAMC,gBAAgB,GAAGC,MAAM,CAACC,oCAAP,IAA+CP,OAAxE;AAEA,eAAe,SAASQ,cAAT,CAAwBC,cAAxB,EAAwC;EACnD,OAAOX,WAAW,CACdI,WADc,EAEdO,cAFc,EAGdJ,gBAAgB,CAACN,eAAe,MAAf,SAAmBK,UAAnB,SAA+BD,gBAA/B,GAAD,CAHF,CAAlB;AAKH"},"metadata":{},"sourceType":"module"}