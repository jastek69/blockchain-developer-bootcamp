{"ast":null,"code":"import _slicedToArray from \"C:\\\\pr0\\\\blockchain-developer-bootcamp\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nimport _objectSpread from \"C:\\\\pr0\\\\blockchain-developer-bootcamp\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport { get, groupBy, reject, maxBy, minBy } from 'lodash';\nimport { createSelector } from 'reselect';\nimport moment from 'moment';\nimport { ETHER_ADDRESS, GREEN, RED, tokens, ether, formatBalance } from '../helpers';\n\nvar account = function account(state) {\n  return get(state, 'web3.account');\n};\n\nexport var accountSelector = createSelector(account, function (a) {\n  return a;\n});\n\nvar web3 = function web3(state) {\n  return get(state, 'web3.connection');\n};\n\nexport var web3Selector = createSelector(web3, function (w) {\n  return w;\n});\n\nvar tokenLoaded = function tokenLoaded(state) {\n  return get(state, 'token.loaded', false);\n};\n\nexport var tokenLoadedSelector = createSelector(tokenLoaded, function (tl) {\n  return tl;\n});\n\nvar token = function token(state) {\n  return get(state, 'token.contract');\n};\n\nexport var tokenSelector = createSelector(token, function (t) {\n  return t;\n});\n\nvar exchangeLoaded = function exchangeLoaded(state) {\n  return get(state, 'exchange.loaded', false);\n};\n\nexport var exchangeLoadedSelector = createSelector(exchangeLoaded, function (el) {\n  return el;\n});\n\nvar exchange = function exchange(state) {\n  return get(state, 'exchange.contract');\n};\n\nexport var exchangeSelector = createSelector(exchange, function (e) {\n  return e;\n});\nexport var contractsLoadedSelector = createSelector(tokenLoaded, exchangeLoaded, function (tl, el) {\n  return tl && el;\n}); //All Orders\n\nvar allOrdersLoaded = function allOrdersLoaded(state) {\n  return get(state, 'exchange.allOrders.loaded', false);\n};\n\nvar allOrders = function allOrders(state) {\n  return get(state, 'exchange.allOrders.data', []);\n}; // Cancelled Orders\n\n\nvar cancelledOrdersLoaded = function cancelledOrdersLoaded(state) {\n  return get(state, 'exchange.cancelledOrders.loaded', false);\n};\n\nexport var cancelledOrdersLoadedSelector = createSelector(cancelledOrdersLoaded, function (loaded) {\n  return loaded;\n});\n\nvar cancelledOrders = function cancelledOrders(state) {\n  return get(state, 'exchange.cancelledOrders.data', []);\n};\n\nexport var cancelledOrdersSelector = createSelector(cancelledOrders, function (o) {\n  return o;\n}); // Filled Orders\n\nvar filledOrdersLoaded = function filledOrdersLoaded(state) {\n  return get(state, 'exchange.filledOrders.loaded', false);\n};\n\nexport var filledOrdersLoadedSelector = createSelector(filledOrdersLoaded, function (loaded) {\n  return loaded;\n});\n\nvar filledOrders = function filledOrders(state) {\n  return get(state, 'exchange.filledOrders.data', []);\n};\n\nexport var filledOrdersSelector = createSelector(filledOrders, function (orders) {\n  // console.log(orders)\n  // Sort orders by date ascending for price comparison\n  orders = orders.sort(function (a, b) {\n    return a.timestamp - b.timestamp;\n  }); // console.log('ORDERS Timestamped', orders)\n  // Decorate the orders\n\n  orders = decorateFilledOrders(orders); // console.log('ORDERS Decorated', orders)\n  // Sort orders by date descending for display\n\n  orders = orders.sort(function (a, b) {\n    return b.timestamp - a.timestamp;\n  });\n  return orders;\n});\n\nvar decorateFilledOrders = function decorateFilledOrders(orders) {\n  // Track previous to compare history\n  var previousOrder = orders[0];\n  return orders.map(function (order) {\n    order = decorateOrder(order);\n    order = decorateFilledOrder(order, previousOrder);\n    previousOrder = order; // Update the previous order once it's decorated\n\n    return order;\n  });\n};\n\nvar decorateOrder = function decorateOrder(order) {\n  var etherAmount;\n  var tokenAmount; // if tokenGive \n\n  if (order.tokenGive === ETHER_ADDRESS) {\n    etherAmount = order.amountGive;\n    tokenAmount = order.amountGet;\n  } else {\n    etherAmount = order.amountGet;\n    tokenAmount = order.amountGive;\n  } // Calculate token price to 5 decimal places\n\n\n  var precision = 100000;\n  var tokenPrice = etherAmount / tokenAmount;\n  tokenPrice = Math.round(tokenPrice * precision) / precision; // console.log(order)\n\n  return _objectSpread(_objectSpread({}, order), {}, {\n    etherAmount: ether(etherAmount),\n    tokenAmount: tokens(tokenAmount),\n    tokenPrice: tokenPrice,\n    formattedTimestamp: moment.unix(order.timestamp).format('h:mm:ss a M/D')\n  });\n};\n\nvar decorateFilledOrder = function decorateFilledOrder(order, previousOrder) {\n  return _objectSpread(_objectSpread({}, order), {}, {\n    tokenPriceClass: tokenPriceClass(order.tokenPrice, order.id, previousOrder)\n  });\n};\n\nvar tokenPriceClass = function tokenPriceClass(tokenPrice, orderId, previousOrder) {\n  // Show green price if only one order exists\n  if (previousOrder.id === orderId) {\n    return GREEN;\n  } // Show green price if order price higher than previous price\n  // Show red price if order price lower than previous order\n\n\n  if (previousOrder.tokenPrice <= tokenPrice) {\n    return GREEN; // success\n  } else {\n    return RED; // danger\n  }\n};\n\nvar openOrders = function openOrders(state) {\n  var all = allOrders(state);\n  var filled = filledOrders(state);\n  var cancelled = cancelledOrders(state);\n  var openOrders = reject(all, function (order) {\n    //lodash - reject\n    var orderFilled = filled.some(function (o) {\n      return o.id === order.id;\n    });\n    var orderCancelled = cancelled.some(function (o) {\n      return o.id === order.id;\n    });\n    return orderFilled || orderCancelled;\n  });\n  return openOrders;\n}; // Order Book \n\n\nvar orderBookLoaded = function orderBookLoaded(state) {\n  return cancelledOrdersLoaded(state) && filledOrdersLoaded(state) && allOrdersLoaded(state);\n};\n\nexport var orderBookLoadedSelector = createSelector(orderBookLoaded, function (loaded) {\n  return loaded;\n}); //Create the Order Book\n\nexport var orderBookSelector = createSelector(openOrders, function (orders) {\n  // Decorate orders\n  orders = decorateOrderBookOrders(orders); // Group orders by \"orderType\"\n\n  orders = groupBy(orders, 'orderType'); // Fetch Buy orders\n\n  var buyOrders = get(orders, 'buy', []); // Sort Buy orders by token price\n\n  orders = _objectSpread(_objectSpread({}, orders), {}, {\n    buyOrders: buyOrders.sort(function (a, b) {\n      return b.tokenPrice - a.tokenPrice;\n    })\n  }); // Fetch Sell orders\n\n  var sellOrders = get(orders, 'sell', []); // Sort Sell orders by token price\n\n  orders = _objectSpread(_objectSpread({}, orders), {}, {\n    sellOrders: sellOrders.sort(function (a, b) {\n      return b.tokenPrice - a.tokenPrice;\n    })\n  });\n  return orders;\n});\n\nvar decorateOrderBookOrders = function decorateOrderBookOrders(orders) {\n  return orders.map(function (order) {\n    order = decorateOrder(order);\n    order = decorateOrderBookOrder(order); // Decorate Order book order\n\n    return order;\n  });\n};\n\nvar decorateOrderBookOrder = function decorateOrderBookOrder(order) {\n  var orderType = order.tokenGive === ETHER_ADDRESS ? 'buy' : 'sell';\n  return _objectSpread(_objectSpread({}, order), {}, {\n    orderType: orderType,\n    orderTypeClass: orderType === 'buy' ? GREEN : RED,\n    orderFillAction: orderType === 'buy' ? 'sell' : 'buy'\n  });\n}; // My Transactions \n\n\nexport var myFilledOrdersLoadedSelector = createSelector(filledOrdersLoaded, function (loaded) {\n  return loaded;\n});\nexport var myFilledOrdersSelector = createSelector(account, filledOrders, function (account, orders) {\n  // Find our orders\n  orders = orders.filter(function (o) {\n    return o.user === account || o.userFill === account;\n  }); // Sort by date descending\n\n  orders = orders.sort(function (a, b) {\n    return a.timestamp - b.timestamp;\n  }); //Decorate orders - add display attributes\n\n  orders = decorateMyFilledOrders(orders, account);\n  return orders;\n});\n\nvar decorateMyFilledOrders = function decorateMyFilledOrders(orders, account) {\n  return orders.map(function (order) {\n    order = decorateOrder(order);\n    order = decorateMyFilledOrder(order, account);\n    return order;\n  });\n};\n\nvar decorateMyFilledOrder = function decorateMyFilledOrder(order, account) {\n  var myOrder = order.user === account;\n  var orderType;\n\n  if (myOrder) {\n    orderType = order.tokenGive === ETHER_ADDRESS ? 'buy' : 'sell';\n  } else {\n    orderType = order.tokenGive === ETHER_ADDRESS ? 'sell' : 'buy';\n  }\n\n  return _objectSpread(_objectSpread({}, order), {}, {\n    orderType: orderType,\n    orderTypeClass: orderType === 'buy' ? GREEN : RED,\n    orderSign: orderType === 'buy' ? '+' : '-'\n  });\n};\n\nexport var myOpenOrdersLoadedSelector = createSelector(orderBookLoaded, function (loaded) {\n  return loaded;\n});\nexport var myOpenOrdersSelector = createSelector(account, openOrders, function (account, orders) {\n  // console.log('ORDERS', orders)\n  // Filter orders create by current account\n  orders = orders.filter(function (o) {\n    return o.user === account;\n  }); // console.log('ORDERS', orders)\n  // Decorate orders - add display attributes\n\n  orders = decorateMyOpenOrders(orders); // console.log('ORDERS', orders)\n  //Sort orders by date descending\n\n  orders = orders.sort(function (a, b) {\n    return b.timestamp - a.timestamp;\n  }); // console.log('ORDERS', orders)\n\n  return orders;\n});\n\nvar decorateMyOpenOrders = function decorateMyOpenOrders(orders, account) {\n  return orders.map(function (order) {\n    order = decorateOrder(order);\n    order = decorateMyOpenOrder(order, account);\n    return order;\n  });\n};\n\nvar decorateMyOpenOrder = function decorateMyOpenOrder(order, account) {\n  var orderType = order.tokenGive === ETHER_ADDRESS ? 'buy' : 'sell';\n  return _objectSpread(_objectSpread({}, order), {}, {\n    orderType: orderType,\n    orderTypeClass: orderType === 'buy' ? GREEN : RED\n  });\n};\n\nexport var priceChartLoadedSelector = createSelector(filledOrdersLoaded, function (loaded) {\n  return loaded;\n});\nexport var priceChartSelector = createSelector(filledOrders, function (orders) {\n  // Sort orders by data ascending to compare history\n  orders = orders.sort(function (a, b) {\n    return a.timestamp - b.timestamp;\n  }); //Decorate orders - add display attributes\n\n  orders = orders.map(function (o) {\n    return decorateOrder(o);\n  }); //Get last 2 orders for final price & price change\n\n  var secondLastOrder, lastOrder;\n\n  var _orders$slice = orders.slice(orders.length - 2, orders.length);\n\n  var _orders$slice2 = _slicedToArray(_orders$slice, 2);\n\n  secondLastOrder = _orders$slice2[0];\n  lastOrder = _orders$slice2[1];\n  //get last order price\n  var lastPrice = get(lastOrder, 'tokenPrice', 0); //get second last order price\n\n  var secondLastPrice = get(secondLastOrder, 'tokenPrice', 0);\n  return {\n    lastPrice: lastPrice,\n    lastPriceChange: lastPrice >= secondLastPrice ? '+' : '-',\n    series: [{\n      data: buildGraphData(orders)\n    }]\n  };\n});\n\nvar buildGraphData = function buildGraphData(orders) {\n  // Group the orders by hour for the graph\n  orders = groupBy(orders, function (o) {\n    return moment.unix(o.timestamp).startOf('hour').format();\n  }); // Get each hour where data exists\n\n  var hours = Object.keys(orders); //Build the graph series\n\n  var graphData = hours.map(function (hour) {\n    // Fetch all the orders from current hour\n    var group = orders[hour]; // Calculate price values - open, high, low, close\n\n    var open = group[0]; //first order\n\n    var high = maxBy(group, 'tokenPrice'); // use lodash maxBy for high price\n\n    var low = minBy(group, 'tokenPrice'); // low price (lodash minBy)\n\n    var close = group[group.length - 1]; // last order\n\n    return {\n      x: new Date(hour),\n      y: [open.tokenPrice, high.tokenPrice, low.tokenPrice, close.tokenPrice]\n    };\n  });\n  return graphData;\n};\n\nvar orderCancelling = function orderCancelling(state) {\n  return get(state, 'exchange.orderCancelling', false);\n};\n\nexport var orderCancellingSelector = createSelector(orderCancelling, function (status) {\n  return status;\n});\n\nvar orderFilling = function orderFilling(state) {\n  return get(state, 'exchange.orderFilling', false);\n};\n\nexport var orderFillingSelector = createSelector(orderFilling, function (status) {\n  return status;\n}); //BALANCES\n\nvar balancesLoading = function balancesLoading(state) {\n  return get(state, 'exchange.balancesLoading', true);\n};\n\nexport var balancesLoadingSelector = createSelector(balancesLoading, function (status) {\n  return status;\n});\n\nvar etherBalance = function etherBalance(state) {\n  return get(state, 'web3.balance', 0);\n};\n\nexport var etherBalancesSelector = createSelector(etherBalance, function (balance) {\n  return formatBalance(balance);\n});\n\nvar tokenBalance = function tokenBalance(state) {\n  return get(state, 'token.balance', 0);\n};\n\nexport var tokenBalancesSelector = createSelector(tokenBalance, function (balance) {\n  return formatBalance(balance);\n});\n\nvar exchangeEtherBalance = function exchangeEtherBalance(state) {\n  return get(state, 'exchange.etherBalance', 0);\n};\n\nexport var exchangeEtherBalanceSelector = createSelector(exchangeEtherBalance, function (balance) {\n  return formatBalance(balance);\n});\n\nvar exchangeTokenBalance = function exchangeTokenBalance(state) {\n  return get(state, 'exchange.tokenBalance', 0);\n};\n\nexport var exchangeTokenBalanceSelector = createSelector(exchangeTokenBalance, function (balance) {\n  return formatBalance(balance);\n});","map":{"version":3,"names":["get","groupBy","reject","maxBy","minBy","createSelector","moment","ETHER_ADDRESS","GREEN","RED","tokens","ether","formatBalance","account","state","accountSelector","a","web3","web3Selector","w","tokenLoaded","tokenLoadedSelector","tl","token","tokenSelector","t","exchangeLoaded","exchangeLoadedSelector","el","exchange","exchangeSelector","e","contractsLoadedSelector","allOrdersLoaded","allOrders","cancelledOrdersLoaded","cancelledOrdersLoadedSelector","loaded","cancelledOrders","cancelledOrdersSelector","o","filledOrdersLoaded","filledOrdersLoadedSelector","filledOrders","filledOrdersSelector","orders","sort","b","timestamp","decorateFilledOrders","previousOrder","map","order","decorateOrder","decorateFilledOrder","etherAmount","tokenAmount","tokenGive","amountGive","amountGet","precision","tokenPrice","Math","round","formattedTimestamp","unix","format","tokenPriceClass","id","orderId","openOrders","all","filled","cancelled","orderFilled","some","orderCancelled","orderBookLoaded","orderBookLoadedSelector","orderBookSelector","decorateOrderBookOrders","buyOrders","sellOrders","decorateOrderBookOrder","orderType","orderTypeClass","orderFillAction","myFilledOrdersLoadedSelector","myFilledOrdersSelector","filter","user","userFill","decorateMyFilledOrders","decorateMyFilledOrder","myOrder","orderSign","myOpenOrdersLoadedSelector","myOpenOrdersSelector","decorateMyOpenOrders","decorateMyOpenOrder","priceChartLoadedSelector","priceChartSelector","secondLastOrder","lastOrder","slice","length","lastPrice","secondLastPrice","lastPriceChange","series","data","buildGraphData","startOf","hours","Object","keys","graphData","hour","group","open","high","low","close","x","Date","y","orderCancelling","orderCancellingSelector","status","orderFilling","orderFillingSelector","balancesLoading","balancesLoadingSelector","etherBalance","etherBalancesSelector","balance","tokenBalance","tokenBalancesSelector","exchangeEtherBalance","exchangeEtherBalanceSelector","exchangeTokenBalance","exchangeTokenBalanceSelector"],"sources":["C:/pr0/blockchain-developer-bootcamp/src/store/selectors.js"],"sourcesContent":["import { get, groupBy, reject, maxBy, minBy } from 'lodash'\r\nimport { createSelector } from 'reselect'\r\nimport moment from 'moment'\r\nimport { ETHER_ADDRESS, GREEN, RED, tokens, ether, formatBalance  } from '../helpers'\r\n\r\nconst account = state => get(state, 'web3.account')\r\nexport const accountSelector = createSelector(account, a => a)\r\n\r\nconst web3 = state => get(state, 'web3.connection')\r\nexport const web3Selector = createSelector(web3, w => w)\r\n\r\nconst tokenLoaded = state => get(state, 'token.loaded', false)\r\nexport const tokenLoadedSelector = createSelector(tokenLoaded, tl => tl)\r\n\r\nconst token = state => get(state, 'token.contract')\r\nexport const tokenSelector = createSelector(token, t => t)\r\n\r\nconst exchangeLoaded = state => get(state, 'exchange.loaded', false)\r\nexport const exchangeLoadedSelector = createSelector(exchangeLoaded, el => el)\r\n\r\nconst exchange = state => get(state, 'exchange.contract')\r\nexport const exchangeSelector = createSelector(exchange, e => e)\r\n\r\nexport const contractsLoadedSelector = createSelector(\r\n    tokenLoaded,\r\n    exchangeLoaded,\r\n    (tl, el) => (tl && el)\r\n)\r\n\r\n//All Orders\r\nconst allOrdersLoaded = state => get(state, 'exchange.allOrders.loaded', false)\r\nconst allOrders = state => get(state, 'exchange.allOrders.data', [])\r\n\r\n// Cancelled Orders\r\nconst cancelledOrdersLoaded = state => get(state, 'exchange.cancelledOrders.loaded', false)\r\nexport const cancelledOrdersLoadedSelector = createSelector(cancelledOrdersLoaded, loaded => loaded)\r\n\r\nconst cancelledOrders = state => get(state, 'exchange.cancelledOrders.data', [])\r\nexport const cancelledOrdersSelector = createSelector(cancelledOrders, o => o)\r\n\r\n// Filled Orders\r\nconst filledOrdersLoaded = state => get(state, 'exchange.filledOrders.loaded', false)\r\nexport const filledOrdersLoadedSelector = createSelector(filledOrdersLoaded, loaded => loaded)\r\n\r\n\r\nconst filledOrders = state => get(state, 'exchange.filledOrders.data', [])\r\nexport const filledOrdersSelector = createSelector(\r\n    filledOrders,\r\n    (orders) => {\r\n        // console.log(orders)\r\n        // Sort orders by date ascending for price comparison\r\n        orders = orders.sort((a,b) => a.timestamp - b.timestamp)\r\n       // console.log('ORDERS Timestamped', orders)\r\n        // Decorate the orders\r\n        orders = decorateFilledOrders(orders)\r\n       // console.log('ORDERS Decorated', orders)\r\n        // Sort orders by date descending for display\r\n        orders = orders.sort((a,b) => b.timestamp - a.timestamp)\r\n        return orders\r\n    }\r\n)\r\n\r\n\r\nconst decorateFilledOrders = (orders) => {\r\n    // Track previous to compare history\r\n    let previousOrder = orders[0]\r\n    return(\r\n      orders.map((order) => {\r\n          order = decorateOrder(order)\r\n          order = decorateFilledOrder(order, previousOrder)\r\n          previousOrder = order // Update the previous order once it's decorated\r\n          return order\r\n      })        \r\n    )\r\n}\r\n\r\nconst decorateOrder = (order) => {\r\n    let etherAmount\r\n    let tokenAmount\r\n    \r\n    // if tokenGive \r\n    if(order.tokenGive === ETHER_ADDRESS) {\r\n        etherAmount = order.amountGive\r\n        tokenAmount = order.amountGet       \r\n    } else {\r\n        etherAmount = order.amountGet\r\n        tokenAmount = order.amountGive \r\n    }\r\n\r\n\r\n    // Calculate token price to 5 decimal places\r\n    const precision = 100000\r\n    let tokenPrice = (etherAmount / tokenAmount)\r\n    tokenPrice = Math.round(tokenPrice * precision) / precision\r\n\r\n    // console.log(order)\r\n    return({\r\n      ...order,\r\n      etherAmount: ether(etherAmount),\r\n      tokenAmount: tokens(tokenAmount),\r\n      tokenPrice,\r\n      formattedTimestamp: moment.unix(order.timestamp).format('h:mm:ss a M/D')\r\n    })\r\n}\r\n\r\nconst decorateFilledOrder = (order, previousOrder) => {\r\n    return({\r\n        ...order,\r\n        tokenPriceClass: tokenPriceClass(order.tokenPrice, order.id, previousOrder)\r\n    })\r\n}\r\n\r\nconst tokenPriceClass = (tokenPrice, orderId, previousOrder) => {\r\n    // Show green price if only one order exists\r\n    if(previousOrder.id === orderId) {\r\n        return GREEN\r\n    }\r\n\r\n    // Show green price if order price higher than previous price\r\n    // Show red price if order price lower than previous order\r\n    if(previousOrder.tokenPrice <= tokenPrice) {\r\n        return GREEN // success\r\n    } else {\r\n        return RED // danger\r\n    }\r\n}\r\n\r\nconst openOrders = state => {\r\n    const all = allOrders(state)\r\n    const filled = filledOrders(state)\r\n    const cancelled = cancelledOrders(state)\r\n\r\n    const openOrders = reject(all, (order) => {   //lodash - reject\r\n        const orderFilled = filled.some((o) => o.id === order.id)      \r\n        const orderCancelled = cancelled.some((o) => o.id === order.id)\r\n        return(orderFilled || orderCancelled)\r\n        })\r\n    \r\n    return openOrders\r\n}\r\n\r\n\r\n\r\n// Order Book \r\n\r\nconst orderBookLoaded = state => cancelledOrdersLoaded(state) && filledOrdersLoaded(state) && allOrdersLoaded(state)\r\nexport const orderBookLoadedSelector = createSelector(orderBookLoaded, loaded => loaded)\r\n\r\n//Create the Order Book\r\nexport const orderBookSelector = createSelector(\r\n    openOrders,\r\n    (orders) => {\r\n        // Decorate orders\r\n        orders = decorateOrderBookOrders(orders)\r\n        \r\n        // Group orders by \"orderType\"\r\n        orders = groupBy(orders, 'orderType')\r\n        \r\n        // Fetch Buy orders\r\n        const buyOrders = get(orders, 'buy', [])\r\n\r\n        // Sort Buy orders by token price\r\n        orders = {\r\n            ...orders,\r\n            buyOrders: buyOrders.sort((a,b) => b.tokenPrice - a.tokenPrice)\r\n        }\r\n\r\n        // Fetch Sell orders\r\n        const sellOrders = get(orders, 'sell', [])\r\n\r\n        // Sort Sell orders by token price\r\n        orders = {\r\n            ...orders,\r\n            sellOrders: sellOrders.sort((a,b) => b.tokenPrice - a.tokenPrice)\r\n        }\r\n        return orders\r\n    }\r\n)\r\n\r\nconst decorateOrderBookOrders = (orders) => {\r\n    return(\r\n        orders.map((order) => {\r\n            order = decorateOrder(order)\r\n            order = decorateOrderBookOrder(order)\r\n            // Decorate Order book order\r\n            return(order)\r\n        })\r\n    )\r\n}\r\n\r\nconst decorateOrderBookOrder = (order) => {\r\n    const orderType = order.tokenGive === ETHER_ADDRESS ? 'buy' : 'sell'\r\n    return({\r\n        ...order,\r\n        orderType,\r\n        orderTypeClass: (orderType === 'buy' ? GREEN : RED),\r\n        orderFillAction: orderType === 'buy' ? 'sell' : 'buy'\r\n    })\r\n}\r\n\r\n\r\n// My Transactions \r\n\r\nexport const myFilledOrdersLoadedSelector = createSelector(filledOrdersLoaded, loaded => loaded)\r\n\r\nexport const myFilledOrdersSelector = createSelector(\r\n    account,\r\n    filledOrders,\r\n    (account, orders) => {\r\n        // Find our orders\r\n        orders = orders.filter((o) => o.user === account || o.userFill === account)\r\n\r\n        // Sort by date descending\r\n        orders = orders.sort((a,b) => a.timestamp - b.timestamp)\r\n\r\n        //Decorate orders - add display attributes\r\n        orders = decorateMyFilledOrders(orders, account)\r\n        return orders\r\n    }\r\n)\r\n\r\n\r\nconst decorateMyFilledOrders = (orders, account) => {\r\n    return(\r\n        orders.map((order) => {\r\n            order = decorateOrder(order)\r\n            order = decorateMyFilledOrder(order, account)\r\n            return(order)\r\n        })\r\n    )\r\n}\r\n\r\n\r\nconst decorateMyFilledOrder = (order, account) => {\r\n    const myOrder = order.user === account\r\n\r\n    let orderType \r\n    if(myOrder) {\r\n        orderType = order.tokenGive === ETHER_ADDRESS ? 'buy' : 'sell'\r\n    } else {\r\n        orderType = order.tokenGive === ETHER_ADDRESS ? 'sell' : 'buy'\r\n    }\r\n\r\n    return({\r\n        ...order,\r\n        orderType,\r\n        orderTypeClass: (orderType === 'buy' ? GREEN : RED),\r\n        orderSign: (orderType === 'buy' ? '+' : '-')\r\n    })\r\n}\r\n\r\n\r\nexport const myOpenOrdersLoadedSelector = createSelector(orderBookLoaded, loaded => loaded)\r\n\r\nexport const myOpenOrdersSelector = createSelector(\r\n    account,\r\n    openOrders,\r\n    (account, orders) => {\r\n       // console.log('ORDERS', orders)\r\n\r\n        // Filter orders create by current account\r\n        orders = orders.filter((o) => o.user === account)\r\n        // console.log('ORDERS', orders)\r\n        \r\n        // Decorate orders - add display attributes\r\n        orders = decorateMyOpenOrders(orders)\r\n\r\n        // console.log('ORDERS', orders)\r\n\r\n        //Sort orders by date descending\r\n        orders = orders.sort((a,b) => b.timestamp - a.timestamp)\r\n        // console.log('ORDERS', orders)\r\n        return orders\r\n    }\r\n)\r\n\r\n\r\nconst decorateMyOpenOrders = (orders, account) => {\r\n    return(\r\n        orders.map((order) => {\r\n            order = decorateOrder(order)\r\n            order = decorateMyOpenOrder(order, account)\r\n            return(order)\r\n        })\r\n    )\r\n}\r\n\r\n\r\nconst decorateMyOpenOrder = (order, account) => {\r\n    let orderType = order.tokenGive === ETHER_ADDRESS ? 'buy' : 'sell'\r\n    \r\n    return({\r\n        ...order,\r\n        orderType,\r\n        orderTypeClass: (orderType === 'buy' ? GREEN : RED)\r\n    })\r\n}\r\n\r\n\r\nexport const priceChartLoadedSelector = createSelector(filledOrdersLoaded, loaded => loaded)\r\n\r\nexport const priceChartSelector = createSelector(\r\n    filledOrders,\r\n    (orders) => {\r\n        // Sort orders by data ascending to compare history\r\n        orders = orders.sort((a,b) => a.timestamp - b.timestamp)\r\n\r\n        //Decorate orders - add display attributes\r\n        orders = orders.map((o) => decorateOrder(o))\r\n\r\n        //Get last 2 orders for final price & price change\r\n        let secondLastOrder, lastOrder\r\n        [secondLastOrder, lastOrder] = orders.slice(orders.length - 2, orders.length)\r\n\r\n        //get last order price\r\n        const lastPrice = get(lastOrder, 'tokenPrice', 0)\r\n\r\n        //get second last order price\r\n        const secondLastPrice = get(secondLastOrder, 'tokenPrice', 0)\r\n\r\n        return({\r\n            lastPrice,\r\n            lastPriceChange: (lastPrice >= secondLastPrice ? '+' : '-'),\r\n            series: [{\r\n                data: buildGraphData(orders)\r\n            }]\r\n        })\r\n    }\r\n)\r\n\r\nconst buildGraphData = (orders) => {\r\n    // Group the orders by hour for the graph\r\n    orders = groupBy(orders, (o) => moment.unix(o.timestamp).startOf('hour').format())\r\n\r\n    // Get each hour where data exists\r\n    const hours = Object.keys(orders)\r\n\r\n    //Build the graph series\r\n    const graphData = hours.map((hour) => {\r\n        // Fetch all the orders from current hour\r\n        \r\n        const group = orders[hour]\r\n        // Calculate price values - open, high, low, close\r\n\r\n        const open = group[0] //first order\r\n        const high = maxBy(group, 'tokenPrice') // use lodash maxBy for high price\r\n        const low = minBy(group, 'tokenPrice') // low price (lodash minBy)\r\n        const close = group[group.length -1] // last order\r\n        \r\n        return({\r\n            x: new Date(hour),\r\n            y: [open.tokenPrice, high.tokenPrice, low.tokenPrice, close.tokenPrice]\r\n        })\r\n    })\r\n    \r\n    return graphData\r\n}\r\n\r\nconst orderCancelling = state => get(state, 'exchange.orderCancelling', false)\r\nexport const orderCancellingSelector = createSelector(orderCancelling, status => status)\r\n\r\nconst orderFilling = state => get(state, 'exchange.orderFilling', false)\r\nexport const orderFillingSelector = createSelector(orderFilling, status => status)\r\n\r\n\r\n//BALANCES\r\nconst balancesLoading = state => get(state, 'exchange.balancesLoading', true)\r\nexport const balancesLoadingSelector = createSelector(balancesLoading, status => status)\r\n\r\nconst etherBalance = state => get(state, 'web3.balance', 0)\r\nexport const etherBalancesSelector = createSelector(\r\n    etherBalance,\r\n    (balance) => {\r\n        return formatBalance(balance)\r\n    }\r\n)\r\n\r\n\r\nconst tokenBalance = state => get(state, 'token.balance', 0)\r\nexport const tokenBalancesSelector = createSelector(\r\n    tokenBalance,\r\n    (balance) => {\r\n        return formatBalance(balance)\r\n    }\r\n)\r\n\r\n\r\nconst exchangeEtherBalance = state => get(state, 'exchange.etherBalance', 0)\r\nexport const exchangeEtherBalanceSelector = createSelector(\r\n    exchangeEtherBalance,\r\n    (balance) => {\r\n        return formatBalance(balance)\r\n    }\r\n)\r\n\r\n\r\nconst exchangeTokenBalance = state => get(state, 'exchange.tokenBalance', 0)\r\nexport const exchangeTokenBalanceSelector = createSelector(\r\n    exchangeTokenBalance,\r\n    (balance) => {\r\n        return formatBalance(balance)\r\n    }\r\n)"],"mappings":"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"},"metadata":{},"sourceType":"module"}