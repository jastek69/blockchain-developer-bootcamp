{"ast":null,"code":"/*\n    This file is part of web3.js.\n\n    web3.js is free software: you can redistribute it and/or modify\n    it under the terms of the GNU Lesser General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    web3.js is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU Lesser General Public License for more details.\n\n    You should have received a copy of the GNU Lesser General Public License\n    along with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n\n/** @file httpprovider.js\n * @authors:\n *   Marek Kotewicz <marek@parity.io>\n *   Marian Oancea\n *   Fabian Vogelsteller <fabian@ethereum.org>\n * @date 2015\n */\nvar errors = require('web3-core-helpers').errors;\n\nvar XHR2 = require('xhr2-cookies').XMLHttpRequest; // jshint ignore: line\n\n\nvar http = require('http');\n\nvar https = require('https');\n/**\n * HttpProvider should be used to send rpc calls over http\n */\n\n\nvar HttpProvider = function HttpProvider(host, options) {\n  options = options || {};\n  this.withCredentials = options.withCredentials || false;\n  this.timeout = options.timeout || 0;\n  this.headers = options.headers;\n  this.agent = options.agent;\n  this.connected = false;\n  var keepAlive = options.keepAlive === true || options.keepAlive !== false ? true : false;\n  this.host = host || 'http://localhost:8545';\n\n  if (!this.agent) {\n    if (this.host.substring(0, 5) === \"https\") {\n      this.httpsAgent = new https.Agent({\n        keepAlive: keepAlive\n      });\n    } else {\n      this.httpAgent = new http.Agent({\n        keepAlive: keepAlive\n      });\n    }\n  }\n};\n\nHttpProvider.prototype._prepareRequest = function () {\n  var request; // the current runtime is a browser\n\n  if (typeof XMLHttpRequest !== 'undefined') {\n    request = new XMLHttpRequest();\n  } else {\n    request = new XHR2();\n    var agents = {\n      httpsAgent: this.httpsAgent,\n      httpAgent: this.httpAgent,\n      baseUrl: this.baseUrl\n    };\n\n    if (this.agent) {\n      agents.httpsAgent = this.agent.https;\n      agents.httpAgent = this.agent.http;\n      agents.baseUrl = this.agent.baseUrl;\n    }\n\n    request.nodejsSet(agents);\n  }\n\n  request.open('POST', this.host, true);\n  request.setRequestHeader('Content-Type', 'application/json');\n  request.timeout = this.timeout;\n  request.withCredentials = this.withCredentials;\n\n  if (this.headers) {\n    this.headers.forEach(function (header) {\n      request.setRequestHeader(header.name, header.value);\n    });\n  }\n\n  return request;\n};\n/**\n * Should be used to make async request\n *\n * @method send\n * @param {Object} payload\n * @param {Function} callback triggered on end with (err, result)\n */\n\n\nHttpProvider.prototype.send = function (payload, callback) {\n  var _this = this;\n\n  var request = this._prepareRequest();\n\n  request.onreadystatechange = function () {\n    if (request.readyState === 4 && request.timeout !== 1) {\n      var result = request.responseText;\n      var error = null;\n\n      try {\n        result = JSON.parse(result);\n      } catch (e) {\n        error = errors.InvalidResponse(request.responseText);\n      }\n\n      _this.connected = true;\n      callback(error, result);\n    }\n  };\n\n  request.ontimeout = function () {\n    _this.connected = false;\n    callback(errors.ConnectionTimeout(this.timeout));\n  };\n\n  try {\n    request.send(JSON.stringify(payload));\n  } catch (error) {\n    this.connected = false;\n    callback(errors.InvalidConnection(this.host));\n  }\n};\n\nHttpProvider.prototype.disconnect = function () {//NO OP\n};\n/**\n * Returns the desired boolean.\n *\n * @method supportsSubscriptions\n * @returns {boolean}\n */\n\n\nHttpProvider.prototype.supportsSubscriptions = function () {\n  return false;\n};\n\nmodule.exports = HttpProvider;","map":{"version":3,"names":["errors","require","XHR2","XMLHttpRequest","http","https","HttpProvider","host","options","withCredentials","timeout","headers","agent","connected","keepAlive","substring","httpsAgent","Agent","httpAgent","prototype","_prepareRequest","request","agents","baseUrl","nodejsSet","open","setRequestHeader","forEach","header","name","value","send","payload","callback","_this","onreadystatechange","readyState","result","responseText","error","JSON","parse","e","InvalidResponse","ontimeout","ConnectionTimeout","stringify","InvalidConnection","disconnect","supportsSubscriptions","module","exports"],"sources":["C:/pr0/blockchain-developer-bootcamp/node_modules/web3/node_modules/web3-providers-http/src/index.js"],"sourcesContent":["/*\n    This file is part of web3.js.\n\n    web3.js is free software: you can redistribute it and/or modify\n    it under the terms of the GNU Lesser General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    web3.js is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU Lesser General Public License for more details.\n\n    You should have received a copy of the GNU Lesser General Public License\n    along with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n/** @file httpprovider.js\n * @authors:\n *   Marek Kotewicz <marek@parity.io>\n *   Marian Oancea\n *   Fabian Vogelsteller <fabian@ethereum.org>\n * @date 2015\n */\n\nvar errors = require('web3-core-helpers').errors;\nvar XHR2 = require('xhr2-cookies').XMLHttpRequest; // jshint ignore: line\nvar http = require('http');\nvar https = require('https');\n\n\n/**\n * HttpProvider should be used to send rpc calls over http\n */\nvar HttpProvider = function HttpProvider(host, options) {\n    options = options || {};\n\n    this.withCredentials = options.withCredentials || false;\n    this.timeout = options.timeout || 0;\n    this.headers = options.headers;\n    this.agent = options.agent;\n    this.connected = false;\n\n    var keepAlive = (options.keepAlive === true || options.keepAlive !== false) ? true : false;\n    this.host = host || 'http://localhost:8545';\n    if (!this.agent) {\n        if (this.host.substring(0,5) === \"https\") {\n            this.httpsAgent = new https.Agent({ keepAlive: keepAlive });\n        } else {\n            this.httpAgent = new http.Agent({ keepAlive: keepAlive });\n        }\n    }\n};\n\nHttpProvider.prototype._prepareRequest = function(){\n    var request;\n\n    // the current runtime is a browser\n    if (typeof XMLHttpRequest !== 'undefined') {\n        request = new XMLHttpRequest();\n    } else {\n        request = new XHR2();\n        var agents = {httpsAgent: this.httpsAgent, httpAgent: this.httpAgent, baseUrl: this.baseUrl};\n\n        if (this.agent) {\n            agents.httpsAgent = this.agent.https;\n            agents.httpAgent = this.agent.http;\n            agents.baseUrl = this.agent.baseUrl;\n        }\n\n        request.nodejsSet(agents);\n    }\n\n    request.open('POST', this.host, true);\n    request.setRequestHeader('Content-Type','application/json');\n    request.timeout = this.timeout;\n    request.withCredentials = this.withCredentials;\n\n    if(this.headers) {\n        this.headers.forEach(function(header) {\n            request.setRequestHeader(header.name, header.value);\n        });\n    }\n\n    return request;\n};\n\n/**\n * Should be used to make async request\n *\n * @method send\n * @param {Object} payload\n * @param {Function} callback triggered on end with (err, result)\n */\nHttpProvider.prototype.send = function (payload, callback) {\n    var _this = this;\n    var request = this._prepareRequest();\n\n    request.onreadystatechange = function() {\n        if (request.readyState === 4 && request.timeout !== 1) {\n            var result = request.responseText;\n            var error = null;\n\n            try {\n                result = JSON.parse(result);\n            } catch(e) {\n                error = errors.InvalidResponse(request.responseText);\n            }\n\n            _this.connected = true;\n            callback(error, result);\n        }\n    };\n\n    request.ontimeout = function() {\n        _this.connected = false;\n        callback(errors.ConnectionTimeout(this.timeout));\n    };\n\n    try {\n        request.send(JSON.stringify(payload));\n    } catch(error) {\n        this.connected = false;\n        callback(errors.InvalidConnection(this.host));\n    }\n};\n\nHttpProvider.prototype.disconnect = function () {\n    //NO OP\n};\n\n/**\n * Returns the desired boolean.\n *\n * @method supportsSubscriptions\n * @returns {boolean}\n */\nHttpProvider.prototype.supportsSubscriptions = function () {\n    return false;\n};\n\nmodule.exports = HttpProvider;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}