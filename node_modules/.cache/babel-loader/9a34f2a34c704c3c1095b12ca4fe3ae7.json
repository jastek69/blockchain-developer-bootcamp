{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\pr0\\\\blockchain-developer-bootcamp\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\pr0\\\\blockchain-developer-bootcamp\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"C:\\\\pr0\\\\blockchain-developer-bootcamp\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\pr0\\\\blockchain-developer-bootcamp\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _inherits from \"C:\\\\pr0\\\\blockchain-developer-bootcamp\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:\\\\pr0\\\\blockchain-developer-bootcamp\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"C:\\\\pr0\\\\blockchain-developer-bootcamp\\\\src\\\\components\\\\App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport Navbar from './Navbar';\nimport Content from './Content';\nimport { connect } from 'react-redux';\nimport { loadWeb3, loadAccount, loadToken, loadExchange } from '../store/interactions';\nimport { contractsLoadedSelector } from '../store/selectors';\n\nvar App = /*#__PURE__*/function (_Component) {\n  _inherits(App, _Component);\n\n  var _super = _createSuper(App);\n\n  function App() {\n    _classCallCheck(this, App);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(App, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      this.loadBlockchainData(this.props.dispatch);\n    }\n  }, {\n    key: \"loadBlockchainData\",\n    value: function () {\n      var _loadBlockchainData = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch) {\n        var web3, networkId, token, exchange;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                web3 = loadWeb3(dispatch); // const web3 = new Web3(window.ethereum)\n\n                _context.next = 3;\n                return web3.eth.net.getId();\n\n              case 3:\n                networkId = _context.sent;\n                _context.next = 6;\n                return loadAccount(web3, dispatch);\n\n              case 6:\n                _context.next = 8;\n                return loadToken(web3, networkId, dispatch);\n\n              case 8:\n                token = _context.sent;\n\n                if (token) {\n                  _context.next = 12;\n                  break;\n                }\n\n                window.alert('Token smart contract not detected on the current network. Please select another network with Metamask.');\n                return _context.abrupt(\"return\");\n\n              case 12:\n                _context.next = 14;\n                return loadExchange(web3, networkId, dispatch);\n\n              case 14:\n                exchange = _context.sent;\n\n                if (exchange) {\n                  _context.next = 18;\n                  break;\n                }\n\n                window.alert('Exchange smart contract not detected on the current network. Please select another network with Metamask.');\n                return _context.abrupt(\"return\");\n\n              case 18:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function loadBlockchainData(_x) {\n        return _loadBlockchainData.apply(this, arguments);\n      }\n\n      return loadBlockchainData;\n    }() //async close\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Navbar, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 10\n        }\n      }), this.props.contractsLoaded ? /*#__PURE__*/React.createElement(Content, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 41\n        }\n      }) : /*#__PURE__*/React.createElement(\"div\", {\n        className: \"content\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 55\n        }\n      }));\n    }\n  }]);\n\n  return App;\n}(Component); // Class close\n// connect component to redux - in order to get dispatch from the props must add it to the props\n\n\nfunction mapStateToProps(state) {\n  return {\n    contractsLoaded: contractsLoadedSelector(state)\n  };\n}\n\nexport default connect(mapStateToProps)(App);","map":{"version":3,"names":["React","Component","Navbar","Content","connect","loadWeb3","loadAccount","loadToken","loadExchange","contractsLoadedSelector","App","loadBlockchainData","props","dispatch","web3","eth","net","getId","networkId","token","window","alert","exchange","contractsLoaded","mapStateToProps","state"],"sources":["C:/pr0/blockchain-developer-bootcamp/src/components/App.js"],"sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport Navbar from './Navbar'\nimport Content from './Content'\nimport { connect } from 'react-redux'\nimport { \n        loadWeb3,\n        loadAccount,\n        loadToken,\n        loadExchange } from '../store/interactions'\nimport { contractsLoadedSelector } from '../store/selectors'\n\n\nclass App extends Component {\n componentWillMount() {   \n   this.loadBlockchainData(this.props.dispatch)\n }\n \n async loadBlockchainData(dispatch) {\n  const web3 = loadWeb3(dispatch)\n  // const web3 = new Web3(window.ethereum)\n  const networkId = await web3.eth.net.getId()\n  await loadAccount(web3, dispatch)\n  const token = await loadToken(web3, networkId, dispatch)\n  if(!token) {\n    window.alert('Token smart contract not detected on the current network. Please select another network with Metamask.')\n    return \n  }\n // console.log(\"token\", token)\n  \n  const exchange = await loadExchange(web3, networkId, dispatch)\n  if(!exchange) {\n    window.alert('Exchange smart contract not detected on the current network. Please select another network with Metamask.')\n    return\n  }\n} //async close\n\n  \n  render() {\n        return (\n        <div>\n         <Navbar />\n         { this.props.contractsLoaded ? <Content /> : <div className=\"content\"></div> }\n        </div>\n      );\n    }\n  } // Class close\n  \n  // connect component to redux - in order to get dispatch from the props must add it to the props\n function mapStateToProps(state) {\n  return {\n    contractsLoaded: contractsLoadedSelector(state)\n    }\n }\n\n export default connect(mapStateToProps)(App);\n"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,WAAP;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SACQC,QADR,EAEQC,WAFR,EAGQC,SAHR,EAIQC,YAJR,QAI4B,uBAJ5B;AAKA,SAASC,uBAAT,QAAwC,oBAAxC;;IAGMC,G;;;;;;;;;;;;;WACL,8BAAqB;MACnB,KAAKC,kBAAL,CAAwB,KAAKC,KAAL,CAAWC,QAAnC;IACD;;;;yFAED,iBAAyBA,QAAzB;QAAA;QAAA;UAAA;YAAA;cAAA;gBACOC,IADP,GACcT,QAAQ,CAACQ,QAAD,CADtB,EAEC;;gBAFD;gBAAA,OAGyBC,IAAI,CAACC,GAAL,CAASC,GAAT,CAAaC,KAAb,EAHzB;;cAAA;gBAGOC,SAHP;gBAAA;gBAAA,OAIOZ,WAAW,CAACQ,IAAD,EAAOD,QAAP,CAJlB;;cAAA;gBAAA;gBAAA,OAKqBN,SAAS,CAACO,IAAD,EAAOI,SAAP,EAAkBL,QAAlB,CAL9B;;cAAA;gBAKOM,KALP;;gBAAA,IAMKA,KANL;kBAAA;kBAAA;gBAAA;;gBAOGC,MAAM,CAACC,KAAP,CAAa,wGAAb;gBAPH;;cAAA;gBAAA;gBAAA,OAYwBb,YAAY,CAACM,IAAD,EAAOI,SAAP,EAAkBL,QAAlB,CAZpC;;cAAA;gBAYOS,QAZP;;gBAAA,IAaKA,QAbL;kBAAA;kBAAA;gBAAA;;gBAcGF,MAAM,CAACC,KAAP,CAAa,2GAAb;gBAdH;;cAAA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA,C;;;;;;;QAiBC;;;;WAGA,kBAAS;MACH,oBACA;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,gBACC,oBAAC,MAAD;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,EADD,EAEG,KAAKT,KAAL,CAAWW,eAAX,gBAA6B,oBAAC,OAAD;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,EAA7B,gBAA2C;QAAK,SAAS,EAAC,SAAf;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,EAF9C,CADA;IAMH;;;;EAhCatB,S,GAiCd;AAEF;;;AACD,SAASuB,eAAT,CAAyBC,KAAzB,EAAgC;EAC/B,OAAO;IACLF,eAAe,EAAEd,uBAAuB,CAACgB,KAAD;EADnC,CAAP;AAGA;;AAED,eAAerB,OAAO,CAACoB,eAAD,CAAP,CAAyBd,GAAzB,CAAf"},"metadata":{},"sourceType":"module"}